{"mappings":"ACEA,kBAAkB;AAClB,SAAS,EAAa,CAAI,EACxB,OAAO,OAAO,EAAK,OAAO,CAAC,QAAS,IACtC,CA0BA,IAAM,EAAY,SAAS,aAAa,CAAC,OAEzC,AA1BA,SAAkB,CAAI,EAUpB,AAPuB,AAFN,MAAM,IAAI,CAAC,EAAK,QAAQ,EAET,IAAI,CAAC,SAAC,CAAA,CAAG,CAAzC,EACE,IAAM,EAAU,EAAa,EAAE,YAAY,CAAC,gBAG5C,OAAO,AAFS,EAAa,EAAE,YAAY,CAAC,gBAE3B,CACnB,GAEe,OAAO,CAAC,SAAC,CAAxB,EACE,EAAK,WAAW,CAAC,EACnB,EACF,EAaS,GAVA,AAYI,EAZC,QAAQ,CAAC,GAAG,CAAC,SAAC,CAA1B,EAAkC,MAAA,CAChC,KAAM,EAAG,WAAW,CAAC,IAAI,GACzB,SAAU,EAAG,YAAY,CAAC,iBAC1B,OAAQ,EAAG,YAAY,CAAC,eACxB,IAAK,SAAS,EAAG,YAAY,CAAC,YAChC,C,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// helper function\nfunction createNumber(wage) {\n    return Number(wage.replace(/\\$|,/g, \"\"));\n}\nfunction sortList(list) {\n    var wageList = Array.from(list.children);\n    var sortedSalaries = wageList.sort(function(a, b) {\n        var salaryA = createNumber(a.getAttribute(\"data-salary\"));\n        var salaryB = createNumber(b.getAttribute(\"data-salary\"));\n        return salaryB - salaryA;\n    });\n    sortedSalaries.forEach(function(salary) {\n        list.appendChild(salary);\n    });\n}\nfunction getEmployees(list) {\n    return list.children.map(function(li) {\n        return {\n            name: li.textContent.trim(),\n            position: li.getAttribute(\"data-position\"),\n            salary: li.getAttribute(\"data-salary\"),\n            age: parseInt(li.getAttribute(\"data-age\"))\n        };\n    });\n}\nvar employees = document.querySelector(\"ul\");\nsortList(employees);\ngetEmployees(employees);\n\n//# sourceMappingURL=index.549c7690.js.map\n","'use strict';\n\n// helper function\nfunction createNumber(wage) {\n  return Number(wage.replace(/\\$|,/g, ''));\n}\n\nfunction sortList(list) {\n  const wageList = Array.from(list.children);\n\n  const sortedSalaries = wageList.sort((a, b) => {\n    const salaryA = createNumber(a.getAttribute('data-salary'));\n    const salaryB = createNumber(b.getAttribute('data-salary'));\n\n    return salaryB - salaryA;\n  });\n\n  sortedSalaries.forEach((salary) => {\n    list.appendChild(salary);\n  });\n}\n\nfunction getEmployees(list) {\n  return list.children.map((li) => ({\n    name: li.textContent.trim(),\n    position: li.getAttribute('data-position'),\n    salary: li.getAttribute('data-salary'),\n    age: parseInt(li.getAttribute('data-age')),\n  }));\n}\n\nconst employees = document.querySelector('ul');\n\nsortList(employees);\n\ngetEmployees(employees);\n"],"names":["createNumber","wage","Number","replace","employees","document","querySelector","sortList","list","sortedSalaries","wageList","Array","from","children","sort","a","b","salaryA","getAttribute","salaryB","forEach","salary","appendChild","map","li","name","textContent","trim","position","age","parseInt"],"version":3,"file":"index.549c7690.js.map"}